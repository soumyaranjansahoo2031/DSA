#https://leetcode.com/problems/subarray-sum-equals-k/description/

## Medium
### Prefix Sum ### HashMap

-------------------------------------------------------------------------------
Brute Force Approach
-------------------------------------------------------------------------------
class Solution {
    public int subarraySum(int[] arr, int k) {
        int n = arr.length;
        int count = 0;

        for(int i = 0;i<n;i++){
            int sum = 0;
            for(int j = i;j<n;j++){
                sum += arr[j];
                if(sum == k) count++;
            }
        }
        return count;
    }
}
-------------------------------------------------------------------------------
Optimised Approach
-------------------------------------------------------------------------------
class Solution {
    public int subarraySum(int[] arr, int k) {
        int n = arr.length;

        int[] prefix = new int[n];
        prefix[0]=arr[0];
        for(int i=1;i<n;i++){
            prefix[i]=prefix[i-1]+arr[i];
        }

        int count = 0;
        
        HashMap<Integer,Integer> map = new HashMap<>();
        map.put(0,1);

        for(int i=0;i<n;i++){
            if(map.containsKey(prefix[i]-k)){
                count += map.get(prefix[i]-k);
            }
            map.put(prefix[i],map.getOrDefault(prefix[i],0)+1);
        }
        
        return count;
    }
}
