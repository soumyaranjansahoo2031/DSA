// https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/description/
// # Medium
// # Array  # Greedy  # Sorting

class Solution {
    public int minDifference(int[] nums) {
        int n = nums.length;
        if(n <= 4) return 0;
        Arrays.sort(nums);
        return Math.min(Math.min(nums[n-4]-nums[0],nums[n-3]-nums[1]),
            Math.min(nums[n-2]-nums[2],nums[n-1]-nums[3]));
    }
}
// =============================================================================================
// 0 1 5 10 14

//  0 1 5 5 10 |  0 0 1 5 5
//  0 1 5 5 5  |  0 0 0 1 5
//  1 5 5 5 5  |  0 0 0 0 1
//---------------------------------------------
// 0 1 5 10 14 24 25 28
// 0 1 2 3  4  5  6  7

// 0 & 4 , 1 & 5, 2 & 6, 3 & 7
