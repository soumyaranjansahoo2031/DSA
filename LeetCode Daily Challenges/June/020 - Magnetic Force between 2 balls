// https://leetcode.com/problems/magnetic-force-between-two-balls/
// # Medium
// # Binary Search

class Solution {
    public int maxDistance(int[] pos, int m) {
        Arrays.sort(pos);
        int n = pos.length;

        int l =1;
        int r = (pos[n-1]-pos[0])/(m-1);
        int ans = 1;
        while(l<=r){
            int mid = (l+r)/2;
            if(check(pos,mid,m)){
                ans = mid;l=mid+1;
            }
            else r=mid-1;
        }
        return ans;
    }
    public boolean check(int[] pos,int x,int m){
        int i=0,prev=-1,curr=0;m--;
        // System.out.println(pos.length);
        while(i<pos.length){
            if(pos[i]-pos[curr]>=x){
                m--;
                prev=curr;
                curr=i;
                // System.out.print(curr+" ");
            }
            if(m==0) return true;
            i++;
        }
        // System.out.println();
        return false;
    }
}


//============================================================================================
// In the universe Earth C-137, 
// Rick discovered a special form of magnetic force between two balls 
// if they are put in his new invented basket. 
// Rick has n empty baskets, the ith basket is at position[i], 
// Morty has m balls and needs to distribute the balls into the baskets 
// such that the minimum magnetic force between any two balls is maximum.

// Rick stated that magnetic force between two different balls 
// at positions x and y is |x - y|.

// Given the integer array position and the integer m. 
// Return the required force.

// =========================================================================================
// Input: position = [1,2,3,4,7], m = 3
// Output: 3
// Explanation: Distributing the 3 balls into baskets 1, 4 and 7 
// will make the magnetic force between ball pairs [3, 3, 6]. 
// The minimum magnetic force is 3. 
// We cannot achieve a larger minimum magnetic force than 3.
