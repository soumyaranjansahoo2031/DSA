// https://www.geeksforgeeks.org/batch/dsa-4/track/DSASP-Trie/problem/trie-insert-and-search0651
// 
// # Trie

package com.practice;

import java.util.Scanner;

public class Trie_crud_operation {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
	
//		int t = sc.nextInt();
		int t=1;
	
		while (t--> 0) {
	
			int n = sc.nextInt();
		
			sc.nextLine();
		
			String[] keys = sc.nextLine().split(" ");
		
			TrieNode root = new TrieNode();
	
			for (int i = 0; i < n; i++) {
		
				insert(root, keys[i]); 
			
			} 
			String abc = sc.nextLine();
			
			if (search (root, abc)) System.out.println(1);
			
			else System.out.println(0);
	
		}

	}
// ===============================================================================================================
	static final int SIZE = 26;
	
	// trie node
    static class TrieNode {
        TrieNode[] children = new TrieNode[SIZE];

        // isEndOfWord is true if the node represents
        // end of a word
        boolean isEndOfWord;

        TrieNode() {
            isEndOfWord = false;
            for (int i = 0; i < SIZE; i++) children[i] = null;
        }
    };
// ===============================================================================================================
  //Function to insert string into TRIE.
    static void insert(TrieNode root, String key) 
    {
        // Your code here
        TrieNode curr = root;
        for(int i=0;i<key.length();i++){
            int index = key.charAt(i)-'a';
            if(curr.children[index]==null){
                curr.children[index] = new TrieNode();
            }
            curr = curr.children[index];
        }
        curr.isEndOfWord = true;
    }
// ===============================================================================================================
    //Function to use TRIE data structure and search the given string.
    static boolean search(TrieNode root, String key)
    {
        // Your code here
        TrieNode curr = root;
        for(int i=0;i<key.length();i++){
            int index = key.charAt(i)-'a';
            if(curr.children[index]==null){
                return false;
            }
            curr = curr.children[index];
        }
        return curr.isEndOfWord;
    }
	
}
// ===============================================================================================================
// Example ----------------------
// 8
// the a there answer any by bye their
// captain 
