// https://leetcode.com/problems/regions-cut-by-slashes/description/?envType=daily-question&envId=2024-08-10
// Medium
// #Graph #DFS

//============================================================================================================
class Solution {
    int[] x_dir = {1,0,-1,0};
    int[] y_dir = {0,1,0,-1};
    public int regionsBySlashes(String[] grid) {
        int[][] m_grid = convert(grid);

        boolean[][] check = new boolean[m_grid.length][m_grid.length];
        int count = 0;

        for(int i=0;i<m_grid.length;i++){
            for(int j=0;j<m_grid.length;j++){
                if(!check[i][j] && m_grid[i][j]==0){
                    dfs(m_grid,i,j,check);
                    count++;
                }
            }
        }
        return count;
    }
    public void dfs(int[][] m_grid,int x,int y,boolean[][] check){
        check[x][y]=true;
        for(int i=0;i<4;i++){
            int nx = x + x_dir[i];
            int ny = y + y_dir[i];

            if(nx>=0 && ny>=0 && nx<m_grid.length && ny<m_grid.length && 
            !check[nx][ny] && m_grid[nx][ny]==0) dfs(m_grid,nx,ny,check);
        }
    }
    public int[][] convert(String[] grid){
        int rows = grid.length;
        int cols = grid[0].length();

        int[][] m_grid = new int[rows*3][cols*3];

        for(int i=0;i<rows;i++){
            for(int j=0;j<cols;j++){
                if(grid[i].charAt(j)=='/'){
                    m_grid[i*3][j*3+2]=1;
                    m_grid[i*3+1][j*3+1]=1;
                    m_grid[i*3+2][j*3]=1;
                }
                else if(grid[i].charAt(j)=='\\'){
                    m_grid[i*3+2][j*3+2]=1;
                    m_grid[i*3+1][j*3+1]=1;
                    m_grid[i*3][j*3]=1;
                }
            }
        }
        System.out.println(Arrays.deepToString(m_grid));
        return m_grid;
    }
}
//============================================================================================================
