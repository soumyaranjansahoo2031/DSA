// https://leetcode.com/problems/count-submatrices-with-equal-frequency-of-x-and-y/description/
// # Medium
// # String  # DP

class Solution {
    public int numberOfSubmatrices(char[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        
        int[][] dp = new int[n][m];
        boolean[][] flag = new boolean[n][m];
        dp[0][0]=check(grid,0,0);
        flag[0][0] = (grid[0][0]=='X');
        for(int j=1;j<m;j++){
            dp[0][j]=dp[0][j-1]+check(grid,0,j);
            flag[0][j]= flag[0][j-1] || (grid[0][j]=='X');
        }
        for(int i=1;i<n;i++){
            dp[i][0]=dp[i-1][0]+check(grid,i,0);
            flag[i][0]=flag[i-1][0] || (grid[i][0]=='X');
        }
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                dp[i][j]=dp[i-1][j]+dp[i][j-1]-dp[i-1][j-1]+check(grid,i,j);
                flag[i][j] = flag[i-1][j] || flag[i][j-1] || (grid[i][j]=='X');
            }
        }
        // System.out.println(Arrays.deepToString(dp));
        int count = 0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(dp[i][j] == 0 && flag[i][j]){
                    // System.out.println(i+" "+j);
                    count++;
                }
            }
        }
        return count;
        
    }
    public int check (char[][] grid,int i,int j){
        char ch = grid[i][j];
        return ch=='X' ? 1 : (ch=='Y' ? -1 : 0);
    }
}
